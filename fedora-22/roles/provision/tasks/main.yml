---

- name: Enable repositories
  yum_repo:
    url: "{{ item }}"
  with_items: provision_repositories
  tags:
    - packages

- name: Enable manual repositories
  copy:
    dest: "/etc/yum.repos.d/{{ item.name }}.repo"
    content: "{{ item.content }}"
  with_items: provision_repositories_manual

- name: Enable rpmfusion
  when: provision_enable_rpmfusion
  dnf:
    name={{ item }}
    state=present
  with_items: provision_rpmfusion_rpms
  tags:
    - packages

- name: Install packages
  dnf:
    name: "{{ item }}"
    state: present
    disable_gpg_check: yes
  with_items: provision_packages
  tags:
    - packages

- name: Manage services
  service:
    name: "{{ item.name }}"
    enabled: "{{ item.enabled | default('yes') }}"
    state: "{{ item.state | default('started') }}"
  with_items: provision_services
  tags:
    - services

- name: Manage users
  user:
    name: "{{ item.name }}"
    shell: "{{ item.shell | default('/bin/bash') }}"
    groups: "{{ ','.join(item.groups) | default([]) }}"
    state: "{{ item.state | default('present') }}"
  with_items: provision_users
  tags:
    - users

- name: Configure kernel modules
  when: "item.persist | default(True)"
  copy:
    dest: "/etc/modprobe.d/{{ item.name }}.conf"
    content: "options {{ item.name }} {{ ' '.join(item.parameters) | default('') }}\n"
  with_items: provision_kernel_modules
  tags:
    - kernel-modules

- name: Unload kernel modules
  when: "item.state == 'reloaded' or item.state == 'absent'"
  modprobe:
    name: "{{ item.name }}"
    state: absent
  with_items: provision_kernel_modules
  tags:
    - kernel-modules

- name: Load kernel modules
  when: "item.state == 'reloaded' or item.state == 'present'"
  modprobe:
    name: "{{ item.name }}"
    params: "{{ ','.join(item.parameters) | default('') }}"
    state: present
  with_items: provision_kernel_modules
  tags:
    - kernel-modules

- name: Secure sshd
  sshd_config:
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    validate: "sshd -t -f"
  with_items:

    - option: Protocol
      value: 2

    - option: PermitRootLogin
      value: 'no'

    - option: PasswordAuthentication
      value: 'no'

    - option: PubKeyAuthentication
      value: 'yes'

    - option: LoginGraceTime
      value: "{{ sshd_login_grace_time }}"

  notify: restart sshd
  tags:
    - security

- name: Enable IPsec
  when: enable_ipsec
  firewalld:
    zone: public
    service: ipsec
    permanent: yes
    state: enabled
  notify: restart firewalld
  tags:
    - security

- name: Rate-limit ssh connections
  firewalld:
    rich_rule: >-
      rule
      service name="ssh"
      log prefix="Rate Limit" level="warning" limit value="1/m"
    permanent: yes
    state: enabled
  notify: restart firwalld
  tags:
    - security

- include: yubikey.yml
  when: provision_yubikey
  tags:
    - yubikey
